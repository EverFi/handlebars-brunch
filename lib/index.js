// Generated by CoffeeScript 1.6.3
(function() {
  var HandlebarsCompiler, handlebars, sysPath, umd;

  handlebars = require('handlebars');

  umd = require('umd-wrapper');

  sysPath = require('path');

  module.exports = HandlebarsCompiler = (function() {
    HandlebarsCompiler.prototype.brunchPlugin = true;

    HandlebarsCompiler.prototype.type = 'template';

    HandlebarsCompiler.prototype.extension = 'hbs';

    HandlebarsCompiler.prototype.pattern = /\.(?:hbs|handlebars)$/;

    function HandlebarsCompiler(config) {
      var handlebarsConfig, _ref;
      this.config = config;
      if (handlebarsConfig = (_ref = this.config.plugins) != null ? _ref.handlebars : void 0) {
        if (typeof handlebarsConfig.overrides === "function") {
          handlebarsConfig.overrides(handlebars);
        }
        this.namespace = handlebarsConfig.namespace;
      }
    }

    HandlebarsCompiler.prototype.compile = function(data, path, callback) {
      var err, error, key, ns, result, source;
      try {
        source = "Handlebars.template(" + (handlebars.precompile(data)) + ")";
        return result = (ns = this.namespace) ? (key = path.replace(/^.*templates\//, '').replace(/\..+?$/, ''), "if (typeof " + ns + " === 'undefined'){ " + ns + " = {} }; " + ns + "['" + key + "'] = " + source) : umd(source);
      } catch (_error) {
        err = _error;
        return error = err;
      } finally {
        callback(error, result);
      }
    };

    HandlebarsCompiler.prototype.include = [sysPath.join(__dirname, '..', 'vendor', 'handlebars.runtime-1.0.js')];

    return HandlebarsCompiler;

  })();

}).call(this);
